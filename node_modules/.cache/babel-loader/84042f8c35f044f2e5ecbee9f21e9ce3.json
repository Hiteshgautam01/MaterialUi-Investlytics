{"ast":null,"code":"import _classCallCheck from \"/Users/precisely/Documents/investlytics-material-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/precisely/Documents/investlytics-material-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/precisely/Documents/investlytics-material-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/precisely/Documents/investlytics-material-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/precisely/Documents/investlytics-material-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/precisely/Documents/investlytics-material-boilerplate/src/components/colorChoser/index.js\";\nimport React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Button from '../uielements/button';\nimport Popover from '../uielements/popover';\nimport { GithubPicker } from '../uielements/reactColor';\nimport ColorChooserDropdown from './colorChooser.style';\n\nvar ColorChoser = /*#__PURE__*/function (_Component) {\n  _inherits(ColorChoser, _Component);\n\n  var _super = _createSuper(ColorChoser);\n\n  function ColorChoser(props) {\n    var _this;\n\n    _classCallCheck(this, ColorChoser);\n\n    _this = _super.call(this, props);\n    _this.handleVisibleChange = _this.handleVisibleChange.bind(_assertThisInitialized(_this));\n    _this.hide = _this.hide.bind(_assertThisInitialized(_this));\n    _this.state = {\n      visible: false,\n      anchorEl: null\n    };\n    return _this;\n  }\n\n  _createClass(ColorChoser, [{\n    key: \"hide\",\n    value: function hide() {\n      this.setState({\n        visible: false\n      });\n    }\n  }, {\n    key: \"handleVisibleChange\",\n    value: function handleVisibleChange() {\n      this.setState({\n        visible: !this.state.visible,\n        anchorEl: findDOMNode(this.button)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          colors = _this$props.colors,\n          seectedColor = _this$props.seectedColor,\n          changeColor = _this$props.changeColor;\n      var colorsIndex = {};\n      colors.forEach(function (color, index) {\n        colorsIndex[color.toLowerCase()] = index;\n      });\n\n      var content = function content() {\n        return /*#__PURE__*/React.createElement(ColorChooserDropdown, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(GithubPicker, {\n          colors: colors,\n          color: colors[seectedColor],\n          className: \"mateColorWrapper\",\n          triangle: \"hide\",\n          disableAlpha: false,\n          onChange: function onChange(col) {\n            changeColor(colorsIndex[col.hex]);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }\n        }));\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"ColorChooser\",\n        style: {\n          backgroundColor: colors[seectedColor]\n        },\n        ref: function ref(node) {\n          _this2.button = node;\n        },\n        onClick: this.handleVisibleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, ' '), /*#__PURE__*/React.createElement(Popover, {\n        open: this.state.visible,\n        anchorEl: this.state.anchorEl // anchorReference={'anchorEl'}\n        ,\n        anchorPosition: {\n          top: 200,\n          left: 400\n        },\n        onClose: this.hide,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        },\n        transformOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, content()));\n    }\n  }]);\n\n  return ColorChoser;\n}(Component);\n\nexport { ColorChoser as default };","map":{"version":3,"sources":["/Users/precisely/Documents/investlytics-material-boilerplate/src/components/colorChoser/index.js"],"names":["React","Component","findDOMNode","Button","Popover","GithubPicker","ColorChooserDropdown","ColorChoser","props","handleVisibleChange","bind","hide","state","visible","anchorEl","setState","button","colors","seectedColor","changeColor","colorsIndex","forEach","color","index","toLowerCase","content","col","hex","backgroundColor","node","top","left","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Button from '../uielements/button';\nimport Popover from '../uielements/popover';\nimport { GithubPicker } from '../uielements/reactColor';\nimport ColorChooserDropdown from './colorChooser.style';\n\nexport default class ColorChoser extends Component {\n  constructor(props) {\n    super(props);\n    this.handleVisibleChange = this.handleVisibleChange.bind(this);\n    this.hide = this.hide.bind(this);\n    this.state = {\n      visible: false,\n      anchorEl: null,\n    };\n  }\n  hide() {\n    this.setState({ visible: false });\n  }\n  handleVisibleChange() {\n    this.setState({\n      visible: !this.state.visible,\n      anchorEl: findDOMNode(this.button),\n    });\n  }\n  render() {\n    const { colors, seectedColor, changeColor } = this.props;\n    const colorsIndex = {};\n    colors.forEach((color, index) => {\n      colorsIndex[color.toLowerCase()] = index;\n    });\n    const content = () => (\n      <ColorChooserDropdown>\n        <GithubPicker\n          colors={colors}\n          color={colors[seectedColor]}\n          className=\"mateColorWrapper\"\n          triangle=\"hide\"\n          disableAlpha={false}\n          onChange={col => {\n            changeColor(colorsIndex[col.hex]);\n          }}\n        />\n      </ColorChooserDropdown>\n    );\n    return (\n      <div>\n        <Button\n          variant=\"contained\"\n          className=\"ColorChooser\"\n          style={{ backgroundColor: colors[seectedColor] }}\n          ref={node => {\n            this.button = node;\n          }}\n          onClick={this.handleVisibleChange}\n        >\n          {' '}\n        </Button>\n        <Popover\n          open={this.state.visible}\n          anchorEl={this.state.anchorEl}\n          // anchorReference={'anchorEl'}\n          anchorPosition={{ top: 200, left: 400 }}\n          onClose={this.hide}\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          transformOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          {content()}\n        </Popover>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}