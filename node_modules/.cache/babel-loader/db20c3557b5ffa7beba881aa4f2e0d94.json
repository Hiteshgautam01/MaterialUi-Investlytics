{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/precisely/Documents/investlytics-material-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\n\nimport styled, { keyframes } from 'styled-components';\nimport { palette } from 'styled-theme';\nimport WithDirection from '../../settings/withDirection';\nimport Buttons from '../../components/uielements/button';\nimport Icons from '../../components/uielements/icon';\nvar spinning = keyframes(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  from {\\n      transform:rotate(0deg);\\n  }\\n  to {\\n      transform:rotate(360deg);\\n  }\\n\"])));\nvar Icon = styled(Icons)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\"])));\nvar Button = styled(Buttons)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  width: 45px;\\n  height: 45px;\\n  min-width: auto;\\n  border-radius: 5px 0 0 5px;\\n  position: fixed;\\n  z-index: 1000;\\n  bottom: 100px;\\n  right: 0;\\n  padding: 0;\\n  transition: all 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);\\n\\n  &.active {\\n    right: 340px;\\n\\n    @media only screen and (max-width: 767px) {\\n      right: 300px;\\n    }\\n  }\\n\\n  \", \" {\\n    font-size: 18px;\\n    animation: \", \" 2.5s linear infinite;\\n  }\\n\"])), Icon, spinning);\nvar Main = styled.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  flex-grow: 1;\\n  background-color: \", \";\\n  padding: 0;\\n  margin-top: 64px;\\n  transition: all 0.2s ease-in-out;\\n  position: relative;\\n\\n  &.fixedNav {\\n    width: calc(100% - 260px);\\n    margin-right: \", \"px;\\n    margin-left: \", \"px;\\n\\n    .GridView {\\n      @media only screen and (max-width: 1140px) {\\n        width: 100%;\\n        margin: 0 0 20px;\\n      }\\n\\n      @media only screen and (min-width: 1141px) and (max-width: 1320px) {\\n        width: calc(100% / 2 - 10px);\\n        margin: \", \";\\n\\n        &:nth-child(2n) {\\n          margin: \", \";\\n        }\\n\\n        &:nth-child(3n):not(:nth-child(2n)) {\\n          margin: \", \";\\n        }\\n      }\\n    }\\n\\n    .ListView {\\n      @media only screen and (max-width: 1130px) {\\n        flex-direction: column;\\n\\n        .alGridImage {\\n          width: 100%;\\n          height: auto;\\n          overflow: hidden;\\n        }\\n      }\\n    }\\n  }\\n\\n  @media only screen and (max-width: 767px) {\\n    flex-shrink: 0;\\n  }\\n\\n  .scrollWrapper {\\n    height: calc(100vh - 65px);\\n  }\\n\\n  .router-transition {\\n    position: relative;\\n  }\\n\\n  .router-transition > div {\\n    position: absolute;\\n    width: 100%;\\n  }\\n\"])), palette('grey', 1), function (props) {\n  return props['data-rtl'] === 'rtl' ? 260 : 0;\n}, function (props) {\n  return props['data-rtl'] === 'rtl' ? 0 : 260;\n}, function (props) {\n  return props['data-rtl'] === 'rtl' ? '0 0 20px 20px' : '0 20px 20px 0';\n}, function (props) {\n  return props['data-rtl'] === 'rtl' ? '0 0 20px 0' : '0 0 20px 0';\n}, function (props) {\n  return props['data-rtl'] === 'rtl' ? '0 0 20px 20px' : '0 20px 20px 0';\n});\nvar Root = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  z-index: 1;\\n  overflow: hidden;\\n\"])));\nvar AppFrame = styled.div(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  position: relative;\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n\"])));\nexport default WithDirection(Main);\nexport { Root, AppFrame, Button, Icon };","map":{"version":3,"sources":["/Users/precisely/Documents/investlytics-material-boilerplate/src/containers/App/style.js"],"names":["styled","keyframes","palette","WithDirection","Buttons","Icons","spinning","Icon","Button","Main","div","props","Root","AppFrame"],"mappings":";;;;AAAA,OAAOA,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AAEA,IAAMC,QAAQ,GAAGL,SAAH,mKAAd;AASA,IAAMM,IAAI,GAAGP,MAAM,CAACK,KAAD,CAAT,uEAAV;AAEA,IAAMG,MAAM,GAAGR,MAAM,CAACI,OAAD,CAAT,wfAoBRG,IApBQ,EAsBKD,QAtBL,CAAZ;AA0BA,IAAMG,IAAI,GAAGT,MAAM,CAACU,GAAV,+vCAGYR,OAAO,CAAC,MAAD,EAAS,CAAT,CAHnB,EAWU,UAAAS,KAAK;AAAA,SAAKA,KAAK,CAAC,UAAD,CAAL,KAAsB,KAAtB,GAA8B,GAA9B,GAAoC,CAAzC;AAAA,CAXf,EAYS,UAAAA,KAAK;AAAA,SAAKA,KAAK,CAAC,UAAD,CAAL,KAAsB,KAAtB,GAA8B,CAA9B,GAAkC,GAAvC;AAAA,CAZd,EAsBQ,UAAAA,KAAK;AAAA,SACbA,KAAK,CAAC,UAAD,CAAL,KAAsB,KAAtB,GAA8B,eAA9B,GAAgD,eADnC;AAAA,CAtBb,EA0BU,UAAAA,KAAK;AAAA,SACbA,KAAK,CAAC,UAAD,CAAL,KAAsB,KAAtB,GAA8B,YAA9B,GAA6C,YADhC;AAAA,CA1Bf,EA+BU,UAAAA,KAAK;AAAA,SACbA,KAAK,CAAC,UAAD,CAAL,KAAsB,KAAtB,GAA8B,eAA9B,GAAgD,eADnC;AAAA,CA/Bf,CAAV;AAoEA,IAAMC,IAAI,GAAGZ,MAAM,CAACU,GAAV,6HAAV;AAMA,IAAMG,QAAQ,GAAGb,MAAM,CAACU,GAAV,mJAAd;AAOA,eAAeP,aAAa,CAACM,IAAD,CAA5B;AACA,SAASG,IAAT,EAAeC,QAAf,EAAyBL,MAAzB,EAAiCD,IAAjC","sourcesContent":["import styled, { keyframes } from 'styled-components';\nimport { palette } from 'styled-theme';\nimport WithDirection from '../../settings/withDirection';\nimport Buttons from '../../components/uielements/button';\nimport Icons from '../../components/uielements/icon';\n\nconst spinning = keyframes`\n  from {\n      transform:rotate(0deg);\n  }\n  to {\n      transform:rotate(360deg);\n  }\n`;\n\nconst Icon = styled(Icons)``;\n\nconst Button = styled(Buttons)`\n  width: 45px;\n  height: 45px;\n  min-width: auto;\n  border-radius: 5px 0 0 5px;\n  position: fixed;\n  z-index: 1000;\n  bottom: 100px;\n  right: 0;\n  padding: 0;\n  transition: all 0.3s cubic-bezier(0.215, 0.61, 0.355, 1);\n\n  &.active {\n    right: 340px;\n\n    @media only screen and (max-width: 767px) {\n      right: 300px;\n    }\n  }\n\n  ${Icon} {\n    font-size: 18px;\n    animation: ${spinning} 2.5s linear infinite;\n  }\n`;\n\nconst Main = styled.div`\n  width: 100%;\n  flex-grow: 1;\n  background-color: ${palette('grey', 1)};\n  padding: 0;\n  margin-top: 64px;\n  transition: all 0.2s ease-in-out;\n  position: relative;\n\n  &.fixedNav {\n    width: calc(100% - 260px);\n    margin-right: ${props => (props['data-rtl'] === 'rtl' ? 260 : 0)}px;\n    margin-left: ${props => (props['data-rtl'] === 'rtl' ? 0 : 260)}px;\n\n    .GridView {\n      @media only screen and (max-width: 1140px) {\n        width: 100%;\n        margin: 0 0 20px;\n      }\n\n      @media only screen and (min-width: 1141px) and (max-width: 1320px) {\n        width: calc(100% / 2 - 10px);\n        margin: ${props =>\n          props['data-rtl'] === 'rtl' ? '0 0 20px 20px' : '0 20px 20px 0'};\n\n        &:nth-child(2n) {\n          margin: ${props =>\n            props['data-rtl'] === 'rtl' ? '0 0 20px 0' : '0 0 20px 0'};\n        }\n\n        &:nth-child(3n):not(:nth-child(2n)) {\n          margin: ${props =>\n            props['data-rtl'] === 'rtl' ? '0 0 20px 20px' : '0 20px 20px 0'};\n        }\n      }\n    }\n\n    .ListView {\n      @media only screen and (max-width: 1130px) {\n        flex-direction: column;\n\n        .alGridImage {\n          width: 100%;\n          height: auto;\n          overflow: hidden;\n        }\n      }\n    }\n  }\n\n  @media only screen and (max-width: 767px) {\n    flex-shrink: 0;\n  }\n\n  .scrollWrapper {\n    height: calc(100vh - 65px);\n  }\n\n  .router-transition {\n    position: relative;\n  }\n\n  .router-transition > div {\n    position: absolute;\n    width: 100%;\n  }\n`;\n\nconst Root = styled.div`\n  width: 100%;\n  z-index: 1;\n  overflow: hidden;\n`;\n\nconst AppFrame = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default WithDirection(Main);\nexport { Root, AppFrame, Button, Icon };\n"]},"metadata":{},"sourceType":"module"}