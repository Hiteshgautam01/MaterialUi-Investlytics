{"ast":null,"code":"import { getDefaultPath } from '../../helpers/urlSync';\nvar options = [// {\n//   label: 'sidebar.dashboard',\n//   key: 'dashboard',\n// },\n{\n  label: 'sidebar.blankPage',\n  key: 'blank-page'\n}];\n\nvar getBreadcrumbOption = function getBreadcrumbOption() {\n  var preKeys = getDefaultPath();\n  var parent, activeChildren;\n  options.forEach(function (option) {\n    if (preKeys[option.key]) {\n      parent = option;\n      (option.children || []).forEach(function (child) {\n        if (preKeys[child.key]) {\n          activeChildren = child;\n        }\n      });\n    }\n  });\n  return {\n    parent: parent,\n    activeChildren: activeChildren\n  };\n};\n\nexport default options;\nexport { getBreadcrumbOption };","map":{"version":3,"sources":["/Users/precisely/Documents/investlytics-material-boilerplate/src/containers/Sidebar/options.js"],"names":["getDefaultPath","options","label","key","getBreadcrumbOption","preKeys","parent","activeChildren","forEach","option","children","child"],"mappings":"AAAA,SAASA,cAAT,QAA+B,uBAA/B;AAEA,IAAMC,OAAO,GAAG,CACd;AACA;AACA;AACA;AACA;AACEC,EAAAA,KAAK,EAAE,mBADT;AAEEC,EAAAA,GAAG,EAAE;AAFP,CALc,CAAhB;;AAUA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,MAAMC,OAAO,GAAGL,cAAc,EAA9B;AACA,MAAIM,MAAJ,EAAYC,cAAZ;AACAN,EAAAA,OAAO,CAACO,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACxB,QAAIJ,OAAO,CAACI,MAAM,CAACN,GAAR,CAAX,EAAyB;AACvBG,MAAAA,MAAM,GAAGG,MAAT;AACA,OAACA,MAAM,CAACC,QAAP,IAAmB,EAApB,EAAwBF,OAAxB,CAAgC,UAAAG,KAAK,EAAI;AACvC,YAAIN,OAAO,CAACM,KAAK,CAACR,GAAP,CAAX,EAAwB;AACtBI,UAAAA,cAAc,GAAGI,KAAjB;AACD;AACF,OAJD;AAKD;AACF,GATD;AAUA,SAAO;AAAEL,IAAAA,MAAM,EAANA,MAAF;AAAUC,IAAAA,cAAc,EAAdA;AAAV,GAAP;AACD,CAdD;;AAeA,eAAeN,OAAf;AACA,SAASG,mBAAT","sourcesContent":["import { getDefaultPath } from '../../helpers/urlSync';\n\nconst options = [\n  // {\n  //   label: 'sidebar.dashboard',\n  //   key: 'dashboard',\n  // },\n  {\n    label: 'sidebar.blankPage',\n    key: 'blank-page',\n  },\n];\nconst getBreadcrumbOption = () => {\n  const preKeys = getDefaultPath();\n  let parent, activeChildren;\n  options.forEach(option => {\n    if (preKeys[option.key]) {\n      parent = option;\n      (option.children || []).forEach(child => {\n        if (preKeys[child.key]) {\n          activeChildren = child;\n        }\n      });\n    }\n  });\n  return { parent, activeChildren };\n};\nexport default options;\nexport { getBreadcrumbOption };\n"]},"metadata":{},"sourceType":"module"}