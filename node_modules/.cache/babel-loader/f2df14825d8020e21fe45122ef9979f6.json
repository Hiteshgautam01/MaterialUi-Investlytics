{"ast":null,"code":"import _classCallCheck from \"/Users/precisely/Documents/investlytics-material-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/precisely/Documents/investlytics-material-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Auth0Lock from 'auth0-lock';\nimport history from './history';\nimport { Auth0Config } from '../../settings';\nimport { notification } from '../../components';\n\nvar Auth0Helper = /*#__PURE__*/function () {\n  function Auth0Helper() {\n    _classCallCheck(this, Auth0Helper);\n\n    this.isValid = Auth0Config.clientID && Auth0Config.domain;\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n  _createClass(Auth0Helper, [{\n    key: \"login\",\n    value: function login(handleLogin) {\n      this.lock = this.isValid ? new Auth0Lock(Auth0Config.clientID, Auth0Config.domain, Auth0Config.options) : null;\n\n      if (!this.lock) {\n        notification('error', 'Lock Error');\n      }\n\n      this.lock.on('authenticated', function (authResult) {\n        if (authResult && authResult.accessToken) {\n          if (window) {\n            localStorage.setItem('id_token', authResult.accessToken);\n          }\n\n          handleLogin();\n        } else {\n          notification('error', 'Wrong mail or password');\n        }\n      });\n      this.lock.show();\n    }\n  }, {\n    key: \"handleAuthentication\",\n    value: function handleAuthentication(props) {\n      localStorage.setItem('id_token', 'secret token');\n      history.replace('/dashboard');\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult) {\n      // Set the time that the access token will expire at\n      var expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n      localStorage.setItem('access_token', authResult.accessToken);\n      localStorage.setItem('id_token', authResult.idToken);\n      localStorage.setItem('expires_at', expiresAt); // navigate to the home route\n\n      history.replace('/');\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      // Clear access token and ID token from local storage\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('expires_at'); // navigate to the home route\n\n      history.replace('/');\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      // Check whether the current time is past the\n      // access token's expiry time\n      return new Date().getTime() < JSON.parse(localStorage.getItem('expires_at'));\n    }\n  }]);\n\n  return Auth0Helper;\n}();\n\nexport default new Auth0Helper();","map":{"version":3,"sources":["/Users/precisely/Documents/investlytics-material-boilerplate/src/helpers/auth0/index.js"],"names":["Auth0Lock","history","Auth0Config","notification","Auth0Helper","isValid","clientID","domain","login","bind","logout","handleAuthentication","isAuthenticated","handleLogin","lock","options","on","authResult","accessToken","window","localStorage","setItem","show","props","replace","expiresAt","JSON","stringify","expiresIn","Date","getTime","idToken","removeItem","parse","getItem"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,YAAT,QAA6B,kBAA7B;;IAEMC,W;AAGJ,yBAAc;AAAA;;AAAA,SAFdC,OAEc,GAFJH,WAAW,CAACI,QAAZ,IAAwBJ,WAAW,CAACK,MAEhC;AACZ,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKE,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BF,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKG,eAAL,GAAuB,KAAKA,eAAL,CAAqBH,IAArB,CAA0B,IAA1B,CAAvB;AACD;;;;WACD,eAAMI,WAAN,EAAmB;AACjB,WAAKC,IAAL,GAAY,KAAKT,OAAL,GACR,IAAIL,SAAJ,CACEE,WAAW,CAACI,QADd,EAEEJ,WAAW,CAACK,MAFd,EAGEL,WAAW,CAACa,OAHd,CADQ,GAMR,IANJ;;AAOA,UAAI,CAAC,KAAKD,IAAV,EAAgB;AACdX,QAAAA,YAAY,CAAC,OAAD,EAAU,YAAV,CAAZ;AACD;;AACD,WAAKW,IAAL,CAAUE,EAAV,CAAa,eAAb,EAA8B,UAAAC,UAAU,EAAI;AAC1C,YAAIA,UAAU,IAAIA,UAAU,CAACC,WAA7B,EAA0C;AACxC,cAAIC,MAAJ,EAAY;AACVC,YAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCJ,UAAU,CAACC,WAA5C;AACD;;AACDL,UAAAA,WAAW;AACZ,SALD,MAKO;AACLV,UAAAA,YAAY,CAAC,OAAD,EAAU,wBAAV,CAAZ;AACD;AACF,OATD;AAUA,WAAKW,IAAL,CAAUQ,IAAV;AACD;;;WACD,8BAAqBC,KAArB,EAA4B;AAC1BH,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,cAAjC;AACApB,MAAAA,OAAO,CAACuB,OAAR,CAAgB,YAAhB;AACD;;;WACD,oBAAWP,UAAX,EAAuB;AACrB;AACA,UAAIQ,SAAS,GAAGC,IAAI,CAACC,SAAL,CACdV,UAAU,CAACW,SAAX,GAAuB,IAAvB,GAA8B,IAAIC,IAAJ,GAAWC,OAAX,EADhB,CAAhB;AAGAV,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCJ,UAAU,CAACC,WAAhD;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCJ,UAAU,CAACc,OAA5C;AACAX,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCI,SAAnC,EAPqB,CAQrB;;AACAxB,MAAAA,OAAO,CAACuB,OAAR,CAAgB,GAAhB;AACD;;;WAED,kBAAS;AACP;AACAJ,MAAAA,YAAY,CAACY,UAAb,CAAwB,cAAxB;AACAZ,MAAAA,YAAY,CAACY,UAAb,CAAwB,UAAxB;AACAZ,MAAAA,YAAY,CAACY,UAAb,CAAwB,YAAxB,EAJO,CAKP;;AACA/B,MAAAA,OAAO,CAACuB,OAAR,CAAgB,GAAhB;AACD;;;WAED,2BAAkB;AAChB;AACA;AACA,aACE,IAAIK,IAAJ,GAAWC,OAAX,KAAuBJ,IAAI,CAACO,KAAL,CAAWb,YAAY,CAACc,OAAb,CAAqB,YAArB,CAAX,CADzB;AAGD;;;;;;AAEH,eAAe,IAAI9B,WAAJ,EAAf","sourcesContent":["import Auth0Lock from 'auth0-lock';\nimport history from './history';\nimport { Auth0Config } from '../../settings';\nimport { notification } from '../../components';\n\nclass Auth0Helper {\n  isValid = Auth0Config.clientID && Auth0Config.domain;\n\n  constructor() {\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n  login(handleLogin) {\n    this.lock = this.isValid\n      ? new Auth0Lock(\n          Auth0Config.clientID,\n          Auth0Config.domain,\n          Auth0Config.options\n        )\n      : null;\n    if (!this.lock) {\n      notification('error', 'Lock Error');\n    }\n    this.lock.on('authenticated', authResult => {\n      if (authResult && authResult.accessToken) {\n        if (window) {\n          localStorage.setItem('id_token', authResult.accessToken);\n        }\n        handleLogin();\n      } else {\n        notification('error', 'Wrong mail or password');\n      }\n    });\n    this.lock.show();\n  }\n  handleAuthentication(props) {\n    localStorage.setItem('id_token', 'secret token');\n    history.replace('/dashboard');\n  }\n  setSession(authResult) {\n    // Set the time that the access token will expire at\n    let expiresAt = JSON.stringify(\n      authResult.expiresIn * 1000 + new Date().getTime()\n    );\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n    // navigate to the home route\n    history.replace('/');\n  }\n\n  logout() {\n    // Clear access token and ID token from local storage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    // navigate to the home route\n    history.replace('/');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    return (\n      new Date().getTime() < JSON.parse(localStorage.getItem('expires_at'))\n    );\n  }\n}\nexport default new Auth0Helper();\n"]},"metadata":{},"sourceType":"module"}