{"ast":null,"code":"import _defineProperty from \"/Users/precisely/Documents/investlytics-material-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/precisely/Documents/investlytics-material-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport clone from 'clone';\nimport config, { getCurrentTheme } from '../../containers/ThemeSwitcher/config';\nimport actions from './actions';\nvar initState = {\n  isActivated: false,\n  changeThemes: getCurrentTheme('changeThemes', config.changeThemes.defaultTheme || 'themedefault'),\n  breadCrumbTheme: getCurrentTheme('breadCrumbTheme', config.breadCrumbTheme.defaultTheme || 'themedefault'),\n  topbarTheme: getCurrentTheme('topbarTheme', config.topbarTheme.defaultTheme || 'themedefault'),\n  sidebarTheme: getCurrentTheme('sidebarTheme', config.sidebarTheme.defaultTheme || 'themedefault'),\n  layoutTheme: getCurrentTheme('layoutTheme', config.layoutTheme.defaultTheme || 'themedefault')\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.SWITCH_ACTIVATION:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isActivated: clone(action.isActivated)\n      });\n\n    case actions.CHANGE_THEME:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, action.attribute, action.theme));\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/precisely/Documents/investlytics-material-boilerplate/src/redux/themeSwitcher/reducer.js"],"names":["clone","config","getCurrentTheme","actions","initState","isActivated","changeThemes","defaultTheme","breadCrumbTheme","topbarTheme","sidebarTheme","layoutTheme","state","action","type","SWITCH_ACTIVATION","CHANGE_THEME","attribute","theme"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,eAAjB,QAAwC,uCAAxC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,KADG;AAEhBC,EAAAA,YAAY,EAAEJ,eAAe,CAC3B,cAD2B,EAE3BD,MAAM,CAACK,YAAP,CAAoBC,YAApB,IAAoC,cAFT,CAFb;AAMhBC,EAAAA,eAAe,EAAEN,eAAe,CAC9B,iBAD8B,EAE9BD,MAAM,CAACO,eAAP,CAAuBD,YAAvB,IAAuC,cAFT,CANhB;AAUhBE,EAAAA,WAAW,EAAEP,eAAe,CAC1B,aAD0B,EAE1BD,MAAM,CAACQ,WAAP,CAAmBF,YAAnB,IAAmC,cAFT,CAVZ;AAchBG,EAAAA,YAAY,EAAER,eAAe,CAC3B,cAD2B,EAE3BD,MAAM,CAACS,YAAP,CAAoBH,YAApB,IAAoC,cAFT,CAdb;AAkBhBI,EAAAA,WAAW,EAAET,eAAe,CAC1B,aAD0B,EAE1BD,MAAM,CAACU,WAAP,CAAmBJ,YAAnB,IAAmC,cAFT;AAlBZ,CAAlB;AAwBA,eAAe,YAAoC;AAAA,MAA3BK,KAA2B,uEAAnBR,SAAmB;AAAA,MAARS,MAAQ;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,OAAO,CAACY,iBAAb;AACE,6CAAYH,KAAZ;AAAmBP,QAAAA,WAAW,EAAEL,KAAK,CAACa,MAAM,CAACR,WAAR;AAArC;;AACF,SAAKF,OAAO,CAACa,YAAb;AACE,6CAAYJ,KAAZ,2BAAoBC,MAAM,CAACI,SAA3B,EAAuCJ,MAAM,CAACK,KAA9C;;AACF;AACE,aAAON,KAAP;AANJ;AAQD","sourcesContent":["import clone from 'clone';\nimport config, { getCurrentTheme } from '../../containers/ThemeSwitcher/config';\nimport actions from './actions';\n\nconst initState = {\n  isActivated: false,\n  changeThemes: getCurrentTheme(\n    'changeThemes',\n    config.changeThemes.defaultTheme || 'themedefault'\n  ),\n  breadCrumbTheme: getCurrentTheme(\n    'breadCrumbTheme',\n    config.breadCrumbTheme.defaultTheme || 'themedefault'\n  ),\n  topbarTheme: getCurrentTheme(\n    'topbarTheme',\n    config.topbarTheme.defaultTheme || 'themedefault'\n  ),\n  sidebarTheme: getCurrentTheme(\n    'sidebarTheme',\n    config.sidebarTheme.defaultTheme || 'themedefault'\n  ),\n  layoutTheme: getCurrentTheme(\n    'layoutTheme',\n    config.layoutTheme.defaultTheme || 'themedefault'\n  )\n};\n\nexport default function(state = initState, action) {\n  switch (action.type) {\n    case actions.SWITCH_ACTIVATION:\n      return { ...state, isActivated: clone(action.isActivated) };\n    case actions.CHANGE_THEME:\n      return { ...state, [action.attribute]: action.theme };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}