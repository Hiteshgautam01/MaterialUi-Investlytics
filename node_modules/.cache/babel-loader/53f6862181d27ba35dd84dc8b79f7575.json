{"ast":null,"code":"import _classCallCheck from \"/Users/precisely/Documents/investlytics-material-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/precisely/Documents/investlytics-material-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport firebase from 'firebase/app';\nimport ReduxSagaFirebase from 'redux-saga-firebase';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/messaging';\nimport 'firebase/firestore';\nimport 'firebase/functions';\nimport 'firebase/storage';\nimport { firebaseConfig } from '../../settings';\nvar valid = firebaseConfig && firebaseConfig.apiKey && firebaseConfig.projectId;\nvar firebaseApp = valid && firebase.initializeApp(firebaseConfig);\nvar firebaseAuth = valid && firebase.auth;\n\nvar FirebaseHelper = /*#__PURE__*/function () {\n  function FirebaseHelper() {\n    var _this = this;\n\n    _classCallCheck(this, FirebaseHelper);\n\n    this.isValid = valid;\n    this.EMAIL = 'email';\n    this.FACEBOOK = 'facebook';\n    this.GOOGLE = 'google';\n    this.GITHUB = 'github';\n    this.TWITTER = 'twitter';\n\n    this.createBatch = function () {\n      return _this.database.batch();\n    };\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.database = this.isValid && firebase.firestore();\n\n    if (this.database) {\n      var settings = {};\n      this.database.settings(settings);\n    }\n\n    this.rsf = this.isValid && new ReduxSagaFirebase(firebaseApp, firebase.firestore());\n    this.rsfFirestore = this.isValid && this.rsf.firestore;\n  }\n\n  _createClass(FirebaseHelper, [{\n    key: \"login\",\n    value: function login(provider, info) {\n      switch (provider) {\n        case this.EMAIL:\n          return firebaseAuth().signInWithEmailAndPassword(info.email, info.password);\n\n        case this.FACEBOOK:\n          return firebaseAuth().FacebookAuthProvider();\n\n        case this.GOOGLE:\n          return firebaseAuth().GoogleAuthProvider();\n\n        case this.GITHUB:\n          return firebaseAuth().GithubAuthProvider();\n\n        case this.TWITTER:\n          return firebaseAuth().TwitterAuthProvider();\n\n        default:\n      }\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      return firebaseAuth().signOut();\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      firebaseAuth().onAuthStateChanged(function (user) {\n        return user ? true : false;\n      });\n    }\n  }, {\n    key: \"resetPassword\",\n    value: function resetPassword(email) {\n      return firebaseAuth().sendPasswordResetEmail(email);\n    }\n  }, {\n    key: \"createNewRef\",\n    value: function createNewRef() {\n      return firebase.database().ref().push().key;\n    }\n  }]);\n\n  return FirebaseHelper;\n}();\n\nexport default new FirebaseHelper();","map":{"version":3,"sources":["/Users/precisely/Documents/investlytics-material-boilerplate/src/helpers/firebase/index.js"],"names":["firebase","ReduxSagaFirebase","firebaseConfig","valid","apiKey","projectId","firebaseApp","initializeApp","firebaseAuth","auth","FirebaseHelper","isValid","EMAIL","FACEBOOK","GOOGLE","GITHUB","TWITTER","createBatch","database","batch","login","bind","logout","isAuthenticated","firestore","settings","rsf","rsfFirestore","provider","info","signInWithEmailAndPassword","email","password","FacebookAuthProvider","GoogleAuthProvider","GithubAuthProvider","TwitterAuthProvider","signOut","onAuthStateChanged","user","sendPasswordResetEmail","ref","push","key"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AACA,OAAO,oBAAP;AACA,OAAO,oBAAP;AACA,OAAO,oBAAP;AACA,OAAO,kBAAP;AAEA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,IAAMC,KAAK,GACTD,cAAc,IAAIA,cAAc,CAACE,MAAjC,IAA2CF,cAAc,CAACG,SAD5D;AAGA,IAAMC,WAAW,GAAGH,KAAK,IAAIH,QAAQ,CAACO,aAAT,CAAuBL,cAAvB,CAA7B;AACA,IAAMM,YAAY,GAAGL,KAAK,IAAIH,QAAQ,CAACS,IAAvC;;IAEMC,c;AAOJ,4BAAc;AAAA;;AAAA;;AAAA,SANdC,OAMc,GANJR,KAMI;AAAA,SALdS,KAKc,GALN,OAKM;AAAA,SAJdC,QAIc,GAJH,UAIG;AAAA,SAHdC,MAGc,GAHL,QAGK;AAAA,SAFdC,MAEc,GAFL,QAEK;AAAA,SADdC,OACc,GADJ,SACI;;AAAA,SAadC,WAbc,GAaA,YAAM;AAClB,aAAO,KAAI,CAACC,QAAL,CAAcC,KAAd,EAAP;AACD,KAfa;;AACZ,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKH,QAAL,GAAgB,KAAKP,OAAL,IAAgBX,QAAQ,CAACwB,SAAT,EAAhC;;AACA,QAAI,KAAKN,QAAT,EAAmB;AACjB,UAAMO,QAAQ,GAAG,EAAjB;AACA,WAAKP,QAAL,CAAcO,QAAd,CAAuBA,QAAvB;AACD;;AACD,SAAKC,GAAL,GACE,KAAKf,OAAL,IAAgB,IAAIV,iBAAJ,CAAsBK,WAAtB,EAAmCN,QAAQ,CAACwB,SAAT,EAAnC,CADlB;AAEA,SAAKG,YAAL,GAAoB,KAAKhB,OAAL,IAAgB,KAAKe,GAAL,CAASF,SAA7C;AACD;;;;WAID,eAAMI,QAAN,EAAgBC,IAAhB,EAAsB;AACpB,cAAQD,QAAR;AACE,aAAK,KAAKhB,KAAV;AACE,iBAAOJ,YAAY,GAAGsB,0BAAf,CACLD,IAAI,CAACE,KADA,EAELF,IAAI,CAACG,QAFA,CAAP;;AAIF,aAAK,KAAKnB,QAAV;AACE,iBAAOL,YAAY,GAAGyB,oBAAf,EAAP;;AACF,aAAK,KAAKnB,MAAV;AACE,iBAAON,YAAY,GAAG0B,kBAAf,EAAP;;AACF,aAAK,KAAKnB,MAAV;AACE,iBAAOP,YAAY,GAAG2B,kBAAf,EAAP;;AACF,aAAK,KAAKnB,OAAV;AACE,iBAAOR,YAAY,GAAG4B,mBAAf,EAAP;;AACF;AAdF;AAgBD;;;WACD,kBAAS;AACP,aAAO5B,YAAY,GAAG6B,OAAf,EAAP;AACD;;;WAED,2BAAkB;AAChB7B,MAAAA,YAAY,GAAG8B,kBAAf,CAAkC,UAAAC,IAAI,EAAI;AACxC,eAAOA,IAAI,GAAG,IAAH,GAAU,KAArB;AACD,OAFD;AAGD;;;WACD,uBAAcR,KAAd,EAAqB;AACnB,aAAOvB,YAAY,GAAGgC,sBAAf,CAAsCT,KAAtC,CAAP;AACD;;;WACD,wBAAe;AACb,aAAO/B,QAAQ,CACZkB,QADI,GAEJuB,GAFI,GAGJC,IAHI,GAGGC,GAHV;AAID;;;;;;AAGH,eAAe,IAAIjC,cAAJ,EAAf","sourcesContent":["import firebase from 'firebase/app';\nimport ReduxSagaFirebase from 'redux-saga-firebase';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/messaging';\nimport 'firebase/firestore';\nimport 'firebase/functions';\nimport 'firebase/storage';\n\nimport { firebaseConfig } from '../../settings';\n\nconst valid =\n  firebaseConfig && firebaseConfig.apiKey && firebaseConfig.projectId;\n\nconst firebaseApp = valid && firebase.initializeApp(firebaseConfig);\nconst firebaseAuth = valid && firebase.auth;\n\nclass FirebaseHelper {\n  isValid = valid;\n  EMAIL = 'email';\n  FACEBOOK = 'facebook';\n  GOOGLE = 'google';\n  GITHUB = 'github';\n  TWITTER = 'twitter';\n  constructor() {\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.database = this.isValid && firebase.firestore();\n    if (this.database) {\n      const settings = {};\n      this.database.settings(settings);\n    }\n    this.rsf =\n      this.isValid && new ReduxSagaFirebase(firebaseApp, firebase.firestore());\n    this.rsfFirestore = this.isValid && this.rsf.firestore;\n  }\n  createBatch = () => {\n    return this.database.batch();\n  };\n  login(provider, info) {\n    switch (provider) {\n      case this.EMAIL:\n        return firebaseAuth().signInWithEmailAndPassword(\n          info.email,\n          info.password\n        );\n      case this.FACEBOOK:\n        return firebaseAuth().FacebookAuthProvider();\n      case this.GOOGLE:\n        return firebaseAuth().GoogleAuthProvider();\n      case this.GITHUB:\n        return firebaseAuth().GithubAuthProvider();\n      case this.TWITTER:\n        return firebaseAuth().TwitterAuthProvider();\n      default:\n    }\n  }\n  logout() {\n    return firebaseAuth().signOut();\n  }\n\n  isAuthenticated() {\n    firebaseAuth().onAuthStateChanged(user => {\n      return user ? true : false;\n    });\n  }\n  resetPassword(email) {\n    return firebaseAuth().sendPasswordResetEmail(email);\n  }\n  createNewRef() {\n    return firebase\n      .database()\n      .ref()\n      .push().key;\n  }\n}\n\nexport default new FirebaseHelper();\n"]},"metadata":{},"sourceType":"module"}