{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/precisely/Documents/investlytics-material-boilerplate/src/components/themeSwitcher/themeSwitcher.js\";\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport IntlMessages from '../../components/utility/intlMessages';\nimport { SwitcherBtns, Button } from './style';\n\nvar ThemeSwitcherBtn = function ThemeSwitcherBtn(_ref) {\n  var config = _ref.config,\n      changeTheme = _ref.changeTheme,\n      selectedId = _ref.selectedId;\n  var id = config.id,\n      label = config.label,\n      options = config.options;\n  return /*#__PURE__*/React.createElement(SwitcherBtns, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"themeSwitchBtnWrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, options.map(function (option) {\n    var themeName = option.themeName,\n        backgroundColor = option.backgroundColor;\n\n    var onClick = function onClick() {\n      changeTheme(id, themeName);\n    };\n\n    var customClass = themeName === selectedId ? 'selectedTheme' : '';\n    return /*#__PURE__*/React.createElement(Button, {\n      key: themeName,\n      onClick: onClick,\n      className: customClass,\n      style: {\n        backgroundColor: backgroundColor\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, \"\\xA0\");\n  })));\n};\n\nexport default withStyles({})(ThemeSwitcherBtn);","map":{"version":3,"sources":["/Users/precisely/Documents/investlytics-material-boilerplate/src/components/themeSwitcher/themeSwitcher.js"],"names":["React","withStyles","IntlMessages","SwitcherBtns","Button","ThemeSwitcherBtn","config","changeTheme","selectedId","id","label","options","map","option","themeName","backgroundColor","onClick","customClass"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,SAArC;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAyC;AAAA,MAAtCC,MAAsC,QAAtCA,MAAsC;AAAA,MAA9BC,WAA8B,QAA9BA,WAA8B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAChE,MAAQC,EAAR,GAA+BH,MAA/B,CAAQG,EAAR;AAAA,MAAYC,KAAZ,GAA+BJ,MAA/B,CAAYI,KAAZ;AAAA,MAAmBC,OAAnB,GAA+BL,MAA/B,CAAmBK,OAAnB;AACA,sBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAED,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,OAAO,CAACC,GAAR,CAAY,UAAAC,MAAM,EAAI;AACrB,QAAQC,SAAR,GAAuCD,MAAvC,CAAQC,SAAR;AAAA,QAAmBC,eAAnB,GAAuCF,MAAvC,CAAmBE,eAAnB;;AACA,QAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBT,MAAAA,WAAW,CAACE,EAAD,EAAKK,SAAL,CAAX;AACD,KAFD;;AAGA,QAAMG,WAAW,GAAGH,SAAS,KAAKN,UAAd,GAA2B,eAA3B,GAA6C,EAAjE;AACA,wBACE,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEM,SADP;AAEE,MAAA,OAAO,EAAEE,OAFX;AAGE,MAAA,SAAS,EAAEC,WAHb;AAIE,MAAA,KAAK,EAAE;AAAEF,QAAAA,eAAe,EAAEA;AAAnB,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,GAhBA,CADH,CAJF,CADF;AA0BD,CA5BD;;AA8BA,eAAed,UAAU,CAAC,EAAD,CAAV,CAAeI,gBAAf,CAAf","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport IntlMessages from '../../components/utility/intlMessages';\nimport { SwitcherBtns, Button } from './style';\n\nconst ThemeSwitcherBtn = ({ config, changeTheme, selectedId }) => {\n  const { id, label, options } = config;\n  return (\n    <SwitcherBtns>\n      <h4>\n        <IntlMessages id={label} />\n      </h4>\n      <div className=\"themeSwitchBtnWrapper\">\n        {options.map(option => {\n          const { themeName, backgroundColor } = option;\n          const onClick = () => {\n            changeTheme(id, themeName);\n          };\n          const customClass = themeName === selectedId ? 'selectedTheme' : '';\n          return (\n            <Button\n              key={themeName}\n              onClick={onClick}\n              className={customClass}\n              style={{ backgroundColor: backgroundColor }}\n            >\n              &nbsp;\n            </Button>\n          );\n        })}\n      </div>\n    </SwitcherBtns>\n  );\n};\n\nexport default withStyles({})(ThemeSwitcherBtn);\n"]},"metadata":{},"sourceType":"module"}